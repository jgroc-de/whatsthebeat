{% extends "skeleton.html.twig" %}

{% block main %}
    <main class="flex flex-col justify-around items-center min-h-[70vh] px-[16px] mt-[20vh] max-w-[960px]">
        <x-action class="flex flex-row justify-around w-full">
            <x-secondary id="actions" class="gg-2-rows">
                {% include "buttons/reset.html.twig" %}
            </x-secondary>
            {% include "buttons/start.html.twig" %}
        </x-action>
        <x-settings class="flex flex-col items-center">
            <label for="tempo">Tempo: <span id="tempoDisplayed">60</span> (BPM)</label>
            <x-tempo-input class="flex h-[30px] w-full items-center justify-between space-x-[8px]">
                {# <button class="border-orange border-[1px] rounded-[20px] w-[120px] shadow-lg bg-gradient-to-br from-[#5bc6ff] to-[#4da7db]">-</button>  #}
                <input type="range" name="tempo" id="tempo" min="1" max="240" value="60" class="w-full"
                       oninput="document.getElementById('tempoDisplayed').textContent = this.value"
                       list="markers"
                       disabled
                >
                {# <button class="border-orange border-[1px] rounded-[20px] w-[120px] shadow-lg bg-gradient-to-br from-[#5bc6ff] to-[#4da7db]">+</button>  #}
            </x-tempo-input>
            <datalist id="markers">
                <option value="60"></option>
                <option value="90"></option>
                <option value="120"></option>
                <option value="180"></option>
            </datalist>
        </x-settings>
        {% include "help_dialog.html.twig" %}
    </main>
{% endblock %}
{% block script %}
    <script>
        let beatCount, savedTime, savedTick, audioCtx, interval, fixedBeatCount
        let inputTempoNode = document.getElementById("tempo")

        // init to previously saved tempo
        let beats = localStorage.getItem("tempo")
        if (beats) {
            inputTempoNode.value = beats
            // we dispatch event so that we can update the label too
            inputTempoNode.dispatchEvent(new Event('input', { bubbles: true }))
        }

        function reset() {
            beatCount = 0
            savedTime = [0, 0, 0]
            savedTick = 0
            fixedBeatCount = savedTime.length * 60
            audioCtx = null
        }
        reset()

        function setAutoReset() {
            // clear interval if already existing
            if (interval) {
                window.clearTimeout(interval)
            }

            // set a new one to reset everything if the user stop tapping
            // so that we can clear all the data
            interval = setTimeout(function () { reset() }, 2500)
        }

        function countTapedBeat() {
            if (!audioCtx) {
                audioCtx = new (window.AudioContext || window.webkitAudioContext)()
            }
            setAutoReset()

            let currentTime = audioCtx.currentTime
            let beats

            if (beatCount < savedTime.length) {
                beats = (beatCount * 60) / currentTime
                savedTime[beatCount] = currentTime
            } else {
                beats = fixedBeatCount / (currentTime - savedTime[savedTick])
                savedTime[savedTick] = currentTime
                savedTick += 1
                if (savedTick === savedTime.length) {
                    savedTick = 0
                }
            }
            beatCount += 1

            if (!isNaN(beats) && beats !== Infinity) {
                beats = Math.floor(beats)
                inputTempoNode.value = beats
                // we dispatch event so that we can update the label too
                inputTempoNode.dispatchEvent(new Event('input', { bubbles: true }))
                localStorage.setItem("tempo", beats);
            }
        }

        document.getElementById('reset').addEventListener('click', reset)
        document.getElementById('reset').addEventListener('touchstart', reset)

        document.getElementById('start').addEventListener('click', countTapedBeat)
        document.getElementById('start').addEventListener('touchend', countTapedBeat)

    </script>
{% endblock %}